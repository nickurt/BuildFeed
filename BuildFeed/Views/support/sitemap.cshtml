@model BuildFeed.Models.ViewModel.SitemapData
@{
    ViewBag.Title = string.Format("{0} | {1}".BuildFeed.Local.Common.Sitemap, BuildFeed.Local.Common.SiteName);
}

<h2>@BuildFeed.Local.Common.Sitemap</h2>

<ul>
    <li>
        @Html.ActionLink("BuildFeed", "index", "build")
        <ul>
            <li>
                <a href="#sitemap-builds" data-toggle="collapse">Builds</a>
                <ul id="sitemap-builds" class="collapse">
                    @foreach (var buildGroup in Model.Builds)
                    {
                        <li>
                            @Html.ActionLink(buildGroup.Id.ToString(), "viewGroup", new { controller = "front", major = buildGroup.Id.Major, minor = buildGroup.Id.Minor, number = buildGroup.Id.Build, revision = buildGroup.Id.Revision })
                            <ul>
                                @foreach (var build in buildGroup.Builds)
                                {
                                    <li>@Html.ActionLink(build.Name, "viewBuild", new { controller = "front", id = build.Id })</li>
                                }
                            </ul>
                        </li>
                    }
                </ul>

            </li>
            @foreach (var item in Model.Actions)
            {
                <li>
                    <a href="#sitemap-@item.Key.ToLower()" data-toggle="collapse">@item.Key</a>
                    <ul id="sitemap-@item.Key.ToLower()" class="collapse">
                        @foreach (var action in item.Value)
                        {
                            if (string.IsNullOrEmpty(action.Name))
                            {
                                <li>@Html.ActionLink("Page 1", action.Action, action.UrlParams)</li>
                                for (int i = 2; i <= action.Pages; i++)
                                {
                                    var urlParams = action.UrlParams;
                                    urlParams["page"] = i;
                                    <li>@Html.ActionLink("Page " + i.ToString(), action.Action + "Page", urlParams)</li>
                                }
                            }
                            else
                            {
                                <li>
                                    <a href="#sitemap-@action.UniqueId" data-toggle="collapse">@action.Name</a>
                                    <ul id="sitemap-@action.UniqueId" class="collapse">
                                        <li>@Html.ActionLink("Page 1", action.Action, action.UrlParams)</li>
                                        @for (int i = 2; i <= action.Pages; i++)
                                        {
                                            var urlParams = action.UrlParams;
                                            urlParams["page"] = i;
                                            <li>@Html.ActionLink("Page " + i.ToString(), action.Action + "Page", urlParams)</li>
                                        }
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                </li>
            }
            <li>
                <a href="#sitemap-rss" data-toggle="collapse">@BuildFeed.Local.Common.RssFeeds</a>
                <ul id="sitemap-rss" class="collapse">
                    <li><a href="@Url.Action("index", new { controller = "rss" })" title="@BuildFeed.Local.Support.RecentlyCompiled"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Support.RecentlyCompiled</a></li>
                    <li><a href="@Url.Action("leaked", new { controller = "rss" })" title="@BuildFeed.Local.Support.RecentlyLeaked"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Support.RecentlyLeaked</a></li>
                    <li><a href="@Url.Action("added", new { controller = "rss" })" title="@BuildFeed.Local.Support.RecentlyAdded"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Support.RecentlyAdded</a></li>
                    <li><a href="@Url.Action("version", new { controller = "rss" })" title="@BuildFeed.Local.Support.HighestVersion"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Support.HighestVersion</a></li>
                    <li>
                        @BuildFeed.Local.Model.FlightLevel
                        <ul>
                            <li><a href="@Url.Action("flight", new { controller = "rss", id = "low" })" title="@BuildFeed.Local.Model.FlightLow"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Model.FlightLow</a></li>
                            <li><a href="@Url.Action("flight", new { controller = "rss", id = "high" })" title="@BuildFeed.Local.Model.FlightHigh"><i class="fa fa-sm fa-rss"></i> @BuildFeed.Local.Model.FlightHigh</a></li>
                        </ul>
                    </li>
                    <li>
                        <a href="#rss-labs" data-toggle="collapse">@BuildFeed.Local.Model.Lab</a>
                        <ul id="rss-labs" class="collapse">
                            @foreach (string lab in Model.Labs)
                            {
                                <li><a href="@Url.Action("lab", new { controller = "rss", lab = lab })" title="@lab"><i class="fa fa-sm fa-rss"></i> @lab</a></li>
                            }
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>
    </li>
</ul>
